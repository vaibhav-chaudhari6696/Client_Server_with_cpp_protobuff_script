// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientserver.proto

#include "clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace assignment {
class messageinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<messageinfo>
      _instance;
} _messageinfo_default_instance_;
}  // namespace assignment
namespace protobuf_clientserver_2eproto {
static void InitDefaultsmessageinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::assignment::_messageinfo_default_instance_;
    new (ptr) ::assignment::messageinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::assignment::messageinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_messageinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmessageinfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_messageinfo.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::assignment::messageinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::assignment::messageinfo, txtmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::assignment::messageinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::assignment::messageinfo, flg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::assignment::messageinfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::assignment::_messageinfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "clientserver.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022clientserver.proto\022\nassignment\":\n\013mess"
      "ageinfo\022\022\n\ntxtmessage\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022"
      "\013\n\003flg\030\003 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "clientserver.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_clientserver_2eproto
namespace assignment {

// ===================================================================

void messageinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int messageinfo::kTxtmessageFieldNumber;
const int messageinfo::kIdFieldNumber;
const int messageinfo::kFlgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

messageinfo::messageinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_clientserver_2eproto::scc_info_messageinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment.messageinfo)
}
messageinfo::messageinfo(const messageinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txtmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txtmessage().size() > 0) {
    txtmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txtmessage_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&flg_) -
    reinterpret_cast<char*>(&id_)) + sizeof(flg_));
  // @@protoc_insertion_point(copy_constructor:assignment.messageinfo)
}

void messageinfo::SharedCtor() {
  txtmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flg_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flg_));
}

messageinfo::~messageinfo() {
  // @@protoc_insertion_point(destructor:assignment.messageinfo)
  SharedDtor();
}

void messageinfo::SharedDtor() {
  txtmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void messageinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* messageinfo::descriptor() {
  ::protobuf_clientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_clientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const messageinfo& messageinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_clientserver_2eproto::scc_info_messageinfo.base);
  return *internal_default_instance();
}


void messageinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment.messageinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txtmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flg_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flg_));
  _internal_metadata_.Clear();
}

bool messageinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment.messageinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string txtmessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txtmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txtmessage().data(), static_cast<int>(this->txtmessage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment.messageinfo.txtmessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool flg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment.messageinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment.messageinfo)
  return false;
#undef DO_
}

void messageinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment.messageinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txtmessage = 1;
  if (this->txtmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txtmessage().data(), static_cast<int>(this->txtmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment.messageinfo.txtmessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->txtmessage(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // bool flg = 3;
  if (this->flg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->flg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment.messageinfo)
}

::google::protobuf::uint8* messageinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment.messageinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txtmessage = 1;
  if (this->txtmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txtmessage().data(), static_cast<int>(this->txtmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment.messageinfo.txtmessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->txtmessage(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // bool flg = 3;
  if (this->flg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->flg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment.messageinfo)
  return target;
}

size_t messageinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment.messageinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string txtmessage = 1;
  if (this->txtmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txtmessage());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool flg = 3;
  if (this->flg() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void messageinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment.messageinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const messageinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const messageinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment.messageinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment.messageinfo)
    MergeFrom(*source);
  }
}

void messageinfo::MergeFrom(const messageinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment.messageinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txtmessage().size() > 0) {

    txtmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txtmessage_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.flg() != 0) {
    set_flg(from.flg());
  }
}

void messageinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment.messageinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void messageinfo::CopyFrom(const messageinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment.messageinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool messageinfo::IsInitialized() const {
  return true;
}

void messageinfo::Swap(messageinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void messageinfo::InternalSwap(messageinfo* other) {
  using std::swap;
  txtmessage_.Swap(&other->txtmessage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(flg_, other->flg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata messageinfo::GetMetadata() const {
  protobuf_clientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_clientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace assignment
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::assignment::messageinfo* Arena::CreateMaybeMessage< ::assignment::messageinfo >(Arena* arena) {
  return Arena::CreateInternal< ::assignment::messageinfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
